/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login_checker;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
//import static jdk.nashorn.internal.objects.NativeString.trim;

/**
 *
 * @author rajesh
 */
public class Client1 extends javax.swing.JFrame {

    JFrame frame = new JFrame();
    static String address = "127.0.0.1";
    static int port = 9090;
    String userName = "";
    char[] userPass;

    byte[] AccountSalt;
    byte[] RandomSalt;
    String sharedSecret="", sharedSecretAndSessionSalt="";
    byte [] clienGenData;
    byte[] message = new byte[4],
            response = new byte[4];
    static DataOutputStream outStream;
    static DataInputStream inStream;

    /**
     * Creates new form Client
     */
    public Client1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_login = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        user_pass = new javax.swing.JPasswordField();
        user_name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(44, 62, 80));

        btn_login.setBackground(new java.awt.Color(34, 167, 240));
        btn_login.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_login.setForeground(new java.awt.Color(255, 255, 255));
        btn_login.setText("Login");
        btn_login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_loginMouseClicked(evt);
            }
        });
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        btn_cancel.setBackground(new java.awt.Color(192, 57, 43));
        btn_cancel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_cancel.setForeground(new java.awt.Color(255, 255, 255));
        btn_cancel.setText("Cancel");
        btn_cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_cancelMouseClicked(evt);
            }
        });

        user_pass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                user_passMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                user_passMousePressed(evt);
            }
        });
        user_pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_passActionPerformed(evt);
            }
        });

        user_name.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        user_name.setToolTipText("your user name");
        user_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_nameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("User name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Password");

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Login form");
        jLabel1.setMaximumSize(new java.awt.Dimension(60, 16));
        jLabel1.setMinimumSize(new java.awt.Dimension(60, 16));
        jLabel1.setPreferredSize(new java.awt.Dimension(60, 16));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addComponent(btn_login, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(user_name, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(user_pass))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_login)
                    .addComponent(btn_cancel))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void user_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_nameActionPerformed

    private void user_passMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_passMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_user_passMouseEntered

    private void user_passMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_passMousePressed
        // TODO add your handling code here:
        userName = user_name.getText().trim();
        byte[] user_Name = userName.getBytes();

        if (userName.length() != 0) {
            message[0] = 1;
            message[1] = (byte) user_Name.length;
            message[2] = 0;
            try {
                outStream.write(message, 0, 3);
                outStream.flush();
                System.out.println("Name form byte array : " + Arrays.toString(user_Name));

                outStream.write(user_Name);
                outStream.flush();
                inStream.read(response, 0, 3);
                System.out.println("Response : {0} " + response[0] + " {1} " + response[1] + " {2} " + response[2]);

                Byte bg = new Byte(response[2]);
                int lastValue = bg.intValue();
                System.out.println("Last Vlaue = " + lastValue);
                if (lastValue == 4) {
                    System.out.println("Sorry! User Not Found!\n");
                } else {
                    Byte bg2 = new Byte(response[1]);
                    int middleValue = bg2.intValue();
                    System.out.println("Middle Vlaue = " + middleValue);
                    AccountSalt = new byte[middleValue];
                    RandomSalt = new byte[lastValue];

                    inStream.read(AccountSalt);
                    inStream.read(RandomSalt);

                    byte[] byteArray1 = new byte[middleValue];
                    for (int i = 0; i < middleValue; i++) {
                        byteArray1[i] = AccountSalt[i];

                    }
                    System.out.println("Account : "+AccountSalt);
                    // System.out.print("AccontSalt in byte array : " + byteArray1 + "\n");
                    //                    String accSalt = new String(byteArray1);
                    //                    System.out.println("Account Salt : \n"+accSalt);

                    byte[] byteArray2 = new byte[lastValue];
                    for (int i = 0; i < lastValue; i++) {
                        byteArray2[i] = RandomSalt[i];

                    }
                    System.out.println("Random  : "+RandomSalt);
                    //System.out.print("RandomSalt in byte array : " + byteArray2 + "\n");
                    //                    String ranSalt = new String(byteArray2);
                    //                    System.out.println("Random Salt : \n"+ranSalt);
                    //                    message [0] = 2;
                    //                    message [1] = 0;
                    //                    message [2] = 5;
                    //                    outStream.write(message,0,3);
                }

            } catch (IOException ex) {
                Logger.getLogger(Client1.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("User Name : " + userName + "\n");
        } else {
            JOptionPane.showMessageDialog(frame, "Please write your user name!", "Alert", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_user_passMousePressed

    private void user_passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_passActionPerformed

    private void btn_loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_loginMouseClicked
        // TODO add your handling code here:

        userName = user_name.getText();
        userPass = user_pass.getPassword();
        String passTest = new String(userPass);
        if (userName.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(frame, "Please write your user name!", "Alert", JOptionPane.WARNING_MESSAGE);
        } else {
            try {

                System.out.println("Passwrod : " + passTest);

                sharedSecret = get_SHA_256_SecurePassword(passTest, AccountSalt);
                System.out.println("After hash with the account salt : " + sharedSecret);

                sharedSecretAndSessionSalt = get_SHA_256_SecurePassword(sharedSecret, RandomSalt);
                System.out.println("After hash by Session Salt : " + sharedSecretAndSessionSalt);

                message [0] = 2;
                message [1] = 0;
                message [2] = 5;
                outStream.write(message,0,3);

                clienGenData = sharedSecretAndSessionSalt.getBytes();
                System.out.println("Length : "+clienGenData.length);
                outStream.write(clienGenData);

                inStream.read(response,0,3);
                System.out.println("{0} " + response[0] + " {1} " + response[1] + " {2} " + response[2]);

                Byte lgb = new Byte(response[0]);
                Byte lgbl = new Byte(response[2]);
                int FirstValofRes = lgb.intValue();
                int lastValofRes =lgbl.intValue();

                if(FirstValofRes == 3 && lastValofRes == 2)
                {
                    JOptionPane.showMessageDialog(frame, "Hello " + user_name.getText()+ " \nLogin Success!", "Alert", JOptionPane.INFORMATION_MESSAGE);

                }
                else
                {
                    JOptionPane.showMessageDialog(frame, "Sorry.! \nWrong User name or Password!", "Alert", JOptionPane.WARNING_MESSAGE);

                }
                user_name.setText("");
                user_pass.setText("");
            } catch (IOException ex) {
                Logger.getLogger(Client1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_loginMouseClicked

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_loginActionPerformed

    private void btn_cancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_cancelMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btn_cancelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client1().setVisible(true);
            }
        });
        try {
            System.out.println("Connecting to " + address + " on port " + port);
            Socket socket = new Socket(address, port);
            System.out.println("Just Connected to " + socket.getInetAddress());

            inStream = new DataInputStream(socket.getInputStream());
            outStream = new DataOutputStream(socket.getOutputStream());
        } catch (IOException ex) {
            Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
 private String get_SHA_256_SecurePassword(String passwordToHash, byte[] salt) {

        //Use MessageDigest md = MessageDigest.getInstance("SHA-256");
        String generatedPassword = null;
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            md.update(salt);
            byte[] bytes = md.digest(passwordToHash.getBytes());
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < bytes.length; i++) {
                sb.append(Integer.toString((bytes[i] & 0xff) + 0x100, 16).substring(1));
            }
            generatedPassword = sb.toString();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
        return generatedPassword;

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_login;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private static javax.swing.JTextField user_name;
    private static javax.swing.JPasswordField user_pass;
    // End of variables declaration//GEN-END:variables
}
